#BlueJ class context
comment0.target=CarPark
comment0.text=\ CarPark\ is\ responsible\ for\ maintaining\ a\ list\ of\ available\ parking\ slots.\ The\ user\ (Carpark\ manager)\ should\ be\ able\ \r\n\ to\ find\ a\ slot,\ add\ a\ slot,\ delete\ a\ slot,\ park\ a\ car\ in\ a\ slot,\ remove\ a\ car\ by\ registration\ number\ and\ provide\ a\ list\r\n\ of\ all\ slots\ included\ in\ the\ car\ park.\r\n
comment1.params=theSlots\ identifier
comment1.target=void\ add_a_slot(java.util.ArrayList,\ char)
comment1.text=\ a\ method\ to\ add\ a\ slot\ to\ a\ given\ list\ of\ parking\ slots,\ using\ the\ given\ identifier\ as\ the\ first\ letter\ in\ the\ Slot\ ID\r\n
comment10.params=
comment10.target=void\ opt4_removeCar()
comment10.text=\ this\ method\ will\ be\ triggeredd\ by\ user\ selection\ -\ option\ 4\ "Remove\ a\ car"\ from\ the\ menu\ list\r\n\ \ the\ user\ will\ be\ asked\ to\ enter\ a\ registration\ number\r\n\ \ calls\ the\ find_a_car_index()\ method\ if\ the\ car\ with\ the\ give\ registration\ number\ is\ in\ the\ parked\ car\ list\r\n\ \ if\ it\ is,\ get\ the\ car\ in\ the\ list,\ its\ owner\ type\ and\ the\ ID\ of\ slot\ where\ it\ is\ parked\r\n\ \ calls\ the\ remove_a_car()\ method\ to\ remove\ the\ car\ from\ the\ list\ of\ parking\ slot\ with\ the\ correct\ owner\ type\r\n
comment11.params=
comment11.target=void\ opt5_addSlot()
comment11.text=\ this\ method\ will\ be\ triggeredd\ by\ user\ selection\ -\ option\ 5\ "Add\ a\ car\ slot"\ from\ the\ menu\ list\r\n\ \ the\ user\ will\ be\ asked\ to\ specify\ which\ type\ of\ car\ park\ slot\ to\ add\r\n
comment12.params=theSlots\ slotID
comment12.target=void\ delete_a_slot(java.util.ArrayList,\ java.lang.String)
comment12.text=\ this\ method\ is\ to\ delete\ a\ slot\ from\ the\ carpark\ by\ a\ given\ slot\ ID\r\n\ \ it\ will\ loop\ through\ each\ slots\ in\ the\ carpark\ to\ see\ if\ any\ slot\ has\ a\ slot\ ID\ matches\ the\ given\ slot\ ID\ \r\n\ \ once\ a\ match\ is\ find,\ then\ check\ if\ the\ slot\ with\ the\ matching\ ID\ is\ occipied\ or\ not\r\n\ \ only\ an\ unoccupied\ slot\ will\ be\ deleted\r\n\ \ a\ message\ will\ print\ out\ to\ advise\ if\ a\ slot\ is\ successfully\ deleted\ or\ not\r\n
comment13.params=
comment13.target=void\ opt6_deleteSlot()
comment13.text=\ this\ method\ will\ be\ triggeredd\ by\ user\ selection\ -\ option\ 6\ "Delete\ a\ car\ slot"\ from\ the\ menu\ list\r\n\ \ the\ user\ will\ be\ asked\ to\ enter\ a\ slot\ ID\ for\ deletion\r\n
comment14.params=
comment14.target=void\ opt7_exit()
comment14.text=\ this\ method\ will\ exit\ the\ program\r\n
comment15.params=
comment15.target=void\ makeFrame()
comment16.params=ownerType
comment16.target=int\ numOfSlotToCreate(java.lang.String)
comment2.params=
comment2.target=void\ createCarPark()
comment2.text=\ a\ method\ to\ establish\ a\ carpark\ with\ slots\ for\ staff\ and\ visitors\r\n\ this\ is\ the\ first\ method\ to\ be\ called\ by\ the\ Start\ class\r\n\ the\ user\ will\ be\ asked\ to\ enter\ the\ numbers\ of\ staff\ slots\ and\ visitor\ slots\ respectively\ to\ generate\ slots\r\n\ all\ slot\ ID\ will\ start\ with\ a\ uppercase\ letter\ followed\ by\ 3\ digits\ (eg.\ S001\ for\ staff\ &\ V001\ for\ visitor)\r\n
comment3.params=theSlots\ slotType
comment3.target=java.util.ArrayList\ get_a_slot_list(java.util.ArrayList,\ java.lang.String)
comment3.text=\ a\ method\ to\ pirint\ a\ list\ of\ carpark\ slots\ based\ on\ a\ given\ slot\ type\r\n
comment4.params=
comment4.target=void\ opt1_listAllSlots()
comment4.text=\ a\ method\ to\ print\ a\ full\ list\ of\ carpark\ slots\ in\ the\ carpark\ including\ both\ for\ staff\ and\ for\ visitors\r\n\ this\ method\ will\ be\ triggered\ by\ user\ selection\ -\ option\ 1\ "List\ all\ car\ slots"\ from\ the\ menu\ list\r\n\ it\ will\ also\ be\ triggered\ to\ show\ a\ list\ of\ carpark\ slots\ when\ a\ user\ selects\ option\ 2\ or\ 6\ \ which\ is\ to\ park\ or\ delete\ a\ car\r\n
comment5.params=theSlots\ index\ theRego
comment5.target=void\ park_a_car(java.util.ArrayList,\ int,\ java.lang.String)
comment5.text=\ a\ method\ to\ park\ a\ car\ into\ a\ slot\ -\ given\ a\ list\ of\ slots\ and\ the\ index\ number\ to\ identiy\ the\ slot\ on\ the\ list\r\n\ if\ the\ slot\ is\ not\ occupied,\ set\ the\ slot\ as\ occupied\ with\ the\ registration\ number\ of\ the\ car\r\n\ advise\ user\ the\ slot\ is\ occupied\r\n
comment6.params=
comment6.target=void\ opt2_parkCar()
comment6.text=\ this\ method\ will\ be\ triggeredd\ by\ user\ selection\ -\ option\ 2\ "Park\ a\ car"\ from\ the\ menu\ list\r\n
comment7.params=rego
comment7.target=int\ find_a_car_index(java.lang.String)
comment7.text=\ this\ method\ is\ to\ find\ a\ car\ by\ registration\ number\r\n\ it\ looks\ up\ the\ list\ of\ the\ parked\ car\ and\ see\ if\ any\ of\ the\ car\ on\ the\ list\ has\ a\ registration\ number\ that\ matches\r\n\ it\ returns\ the\ index\ number\ of\ the\ car\ with\ the\ matching\ rego\ number.\ \ If\ no\ car\ is\ found,\ it\ returns\ -1.\r\n
comment8.params=
comment8.target=void\ Opt3_findCar()
comment8.text=\ this\ method\ will\ be\ triggeredd\ by\ user\ selection\ -\ option\ 3\ "Find\ a\ car"\ from\ the\ menu\ list\r\n\ \ the\ user\ will\ be\ asked\ to\ enter\ a\ registration\ number\r\n
comment9.params=theSlots\ rego
comment9.target=ParkingSlots\ remove_a_car_from_slot(java.util.ArrayList,\ java.lang.String)
comment9.text=\ this\ method\ is\ to\ remove\ a\ car\ from\ a\ parking\ slot\ by\ registration\ number\r\n\ \ it\ looks\ up\ a\ list\ of\ parking\ slots\r\n\ \ for\ each\ parking\ slot,\ first\ check\ if\ it\ is\ occupied,\ if\ not,\ move\ to\ the\ next\ parking\ slot\r\n\ \ if\ it\ is\ occupied,\ check\ if\ the\ rego\ number\ of\ the\ car\ occupying\ the\ slot\ matches\ the\ rego\ given\ by\ the\ user.\ if\ not,\ move\ to\ the\ next\ parking\ slot\r\n\ \ until\ a\ matching\ rego\ number\ is\ found,\ returns\ the\ slot\ object\r\n
numComments=17
